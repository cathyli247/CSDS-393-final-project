[{"/Users/gilgamesh/Desktop/code/393/sites/frontend/src/index.js":"1","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/App.js":"2","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/reportWebVitals.js":"3","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/MainComponent.js":"4","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/HeaderComponent.js":"5","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/HomeComponent.js":"6","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/MyBlogsComponent.js":"7","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/FavoriteComponent.js":"8","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/FooterComponent.js":"9","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/BlogEditorComponent.js":"10","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/BlogViewerComponent.js":"11","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/config.js":"12","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/shared/baseUrl.js":"13"},{"size":639,"mtime":1618986521000,"results":"14","hashOfConfig":"15"},{"size":298,"mtime":1618986521000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1618986521000,"results":"17","hashOfConfig":"15"},{"size":2569,"mtime":1620013919195,"results":"18","hashOfConfig":"15"},{"size":9637,"mtime":1620013919195,"results":"19","hashOfConfig":"15"},{"size":4875,"mtime":1620012882251,"results":"20","hashOfConfig":"15"},{"size":2398,"mtime":1619518206670,"results":"21","hashOfConfig":"15"},{"size":2893,"mtime":1619518206668,"results":"22","hashOfConfig":"15"},{"size":1172,"mtime":1619518206668,"results":"23","hashOfConfig":"15"},{"size":8023,"mtime":1619518206668,"results":"24","hashOfConfig":"15"},{"size":11061,"mtime":1620013610007,"results":"25","hashOfConfig":"15"},{"size":61,"mtime":1620014324980,"results":"26","hashOfConfig":"15"},{"size":47,"mtime":1618986521000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fnulv4",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gilgamesh/Desktop/code/393/sites/frontend/src/index.js",[],"/Users/gilgamesh/Desktop/code/393/sites/frontend/src/App.js",[],"/Users/gilgamesh/Desktop/code/393/sites/frontend/src/reportWebVitals.js",[],"/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/MainComponent.js",[],"/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/HeaderComponent.js",["61"],"import React, { Component } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Button, Modal, ModalHeader, ModalBody, Col, Row, Form, FormGroup, Label, Input } from 'reactstrap';\nimport {baseUrl} from '../shared/baseUrl';\nvar config = require('../config');\n\nclass Header extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username:'',\n            password: '',\n            isNavOpen: false,\n            isModalSignUpOpen: false,\n            isModalLoginOpen: false,\n        };\n        \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModalSignUp = this.toggleModalSignUp.bind(this);\n        this.toggleModalLogin = this.toggleModalLogin.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleSignup = this.handleSignup.bind(this);\n        this.handeLogout = this.handeLogout.bind(this);\n    }\n\n    toggleNav(){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModalSignUp(){\n        this.setState({\n            isModalSignUpOpen: !this.state.isModalSignUpOpen,\n        });\n    }\n\n    toggleModalLogin(){\n        this.setState({\n            isModalLoginOpen: !this.state.isModalLoginOpen,\n        });\n    }\n\n    handleInputChange(event){\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSignup(event){\n        event.preventDefault();\n        //alert(\"Sign up\");\n        let databody = {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }\n        fetch(config.serverUrl+'/account/register', {\n            method: 'POST',\n            body: JSON.stringify(databody),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(res => res.json())\n        .then(data => {\n            if(data.error_message) alert(data.error_message);\n            else{\n                this.props.onUsernameChange(this.state.username, '');\n                alert(\"Please Login with your username and password.\")\n                this.props.history.push('/home');\n            }\n        })\n    }\n\n    handleLogin(event){\n        event.preventDefault();\n        //alert(\"Login\");\n        let databody = {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }\n        fetch(config.serverUrl+'/account/login', {\n            method: 'POST',\n            body: JSON.stringify(databody),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(res => res.json())\n        .then(data => {\n            if(data.error_message) alert(data.error_message);\n            else{\n                this.props.onUsernameChange(this.state.username, data.token);\n                this.props.history.push('/home');\n            }\n        })\n    }\n\n    handeLogout(event){\n        event.preventDefault();\n        if(this.props.authenticated){\n            let databody = {\n                \"username\": this.props.username\n            }\n            fetch(config.serverUrl+'/users/logout', {\n                method: 'PUT',\n                body: JSON.stringify(databody),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(res => res.json())\n            .then(data => {\n                if(data.success === false) alert(data.msg);\n                else{\n                    this.props.onUsernameChange(this.state.username, '');\n                    this.props.history.push('/home');\n                }\n            })\n        }\n        else\n            alert(\"Please Signup or Login first!\");\n    }\n\n    render(){\n        return(\n            <>\n                <Navbar dark className=\"custom-header\" expand=\"lg\">\n                    <NavbarBrand href=\"/home\">Logo</NavbarBrand>\n                    <NavbarToggler id=\"nav\" onClick={this.toggleNav} />\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink href=\"/home\"><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"/myBlogs\"><span className=\"fa fa-user-circle-o fa-lg\"></span> MyBlogs</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"/favorite\"><span className=\"fa fa-heart fa-lg\"></span> Fav List</NavLink>\n                        </NavItem>\n                    </Nav>\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem>\n                            <Button id=\"signup\" className=\"button-mr\" outline onClick={this.toggleModalSignUp}>\n                                <span className=\"fa fa-user-plus fa-lg\"></span> Sign up\n                            </Button>\n                        </NavItem>\n                        <NavItem>\n                            <Button id=\"login\" className=\"button-mr\" outline onClick={this.toggleModalLogin}>\n                                <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                            </Button>\n                        </NavItem>\n                        <NavItem>\n                            <Button className=\"button-mr\" outline onClick={this.handeLogout}>\n                                <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                            </Button>\n                        </NavItem>\n                    </Nav>\n                    </Collapse>\n                </Navbar>\n\n                <Modal isOpen={this.state.isModalSignUpOpen} toggle={this.toggleModalSignUp}>\n                    <ModalHeader toggle={this.toggleModalSignUp}>Sign Up</ModalHeader>\n                    <ModalBody>\n                        <Form id=\"signupForm\" onSubmit={this.handleSignup}>\n                            <Row>\n                                <Col xs={12} sm={{size: 8, offset:2}}>\n                                    <FormGroup>\n                                        <Label htmlFor=\"username\">Username</Label>\n                                        <Input type=\"text\" id=\"username1\" name=\"username\" value={this.state.username} onChange={this.handleInputChange}/>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={12} sm={{size: 8, offset:2}}>\n                                    <FormGroup>\n                                        <Label htmlFor=\"password\">Password</Label>\n                                        <Input type=\"password\" id=\"password1\" name=\"password\" value={this.state.password} onChange={this.handleInputChange}/>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row style={{marginTop: \"10px\"}}>\n                                <Col xs={12} md={{size: 4, offset:2}}>\n                                    <FormGroup>\n                                        <Button type=\"submit\" value=\"submit\" color=\"primary\" style={{width: \"100%\"}}>Sign up</Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n                <Modal isOpen={this.state.isModalLoginOpen} toggle={this.toggleModalLogin}>\n                    <ModalHeader toggle={this.toggleModalLogin}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <Row>\n                                <Col xs={12} sm={{size: 8, offset:2}}>\n                                    <FormGroup>\n                                        <Label htmlFor=\"username\">Username</Label>\n                                        <Input type=\"text\" id=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInputChange}/>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={12} sm={{size: 8, offset:2}}>\n                                    <FormGroup>\n                                        <Label htmlFor=\"password\">Password</Label>\n                                        <Input type=\"password\" id=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange}/>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row style={{marginTop: \"10px\"}}>\n                                <Col xs={12} md={{size: 4, offset:2}}>\n                                    <FormGroup>\n                                        <Button type=\"submit\" value=\"submit\" color=\"primary\" style={{width: \"100%\"}}>Login</Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/HomeComponent.js",["62"],"import React, {Component} from 'react';\nimport {Button, Form, FormGroup, Input, Col, Row} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nvar config = require('../config');\n\nclass Home extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            search:'NA',\n            blogs: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.location.state){\n            fetch(config.serverUrl+'/post/list?search='+this.props.location.state.search, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    blogs: data\n                })\n            })\n        }\n    }\n\n    handleInputChange(event){\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        if(this.state.search=='NA'){\n            fetch(config.serverUrl+'/post/list?search='+this.state.search, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    blogs: data\n                })\n            })\n        }\n        else{\n            alert(\"Please enter keyword(s)!\");\n        }\n    }\n\n    render(){\n\n        var blog;\n        if(this.state.blogs.length !== 0){\n            blog = this.state.blogs.map((blog) => {\n                return (\n                    <div key={blog.blog_id} className=\"row col-12 col-md-8 offset-md-1\" style={{marginBottom:\"30px\", borderStyle:\"solid\", borderRadius:\"10px\", borderWidth:\"1px\", borderColor:\"#D7D7D7\"}}>\n                        <div className=\"col-12 col-md-6 offset-md-3\" style={{marginTop: \"30px\"}}>\n                            <p><strong>Title:</strong> {blog.title}</p>\n                        </div>\n                        <div className=\"col-12 col-md-6 offset-md-3\">\n                            <p><strong>Author:</strong> {blog.author}</p>\n                        </div>\n                        <div className=\"col-12 col-md-6 offset-md-3\">\n                            <p><strong>Category:</strong> {blog.category}</p>\n                        </div>\n                        <div className=\"col-6 col-md-3 offset-6 offset-md-9 border\" style={{borderRadius:\"5px\", backgroundColor:\"#0A304E\", height:\"40px\",width:\"100%\",paddingTop:\"8px\", marginBottom:\"20px\"}}>\n                            <center><strong><Link to={{ pathname: `/blogviewer/${blog.blog_id}` , state: { search: this.state.search} }} style={{ color: '#FFF' }}> Read</Link></strong></center>\n                        </div>\n                    </div>\n                );\n            })\n        }\n        else{\n            blog =(\n                    <div className=\"container\">\n                        <center><h5 style={{marginTop:\"22px\", fontFamily:\"Arial Black\"}}>No Blogs Found</h5></center>\n                    </div>\n            );\n  \n        }\n\n        return(\n            <div className=\"container\">\n                <Row style={{marginTop: \"30px\"}}>\n                    <Col xs={12}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Row>\n                                <Col sm={12} md={9} className=\"mr-auto\">\n                                    <i className=\"fa fa-search fa-lg icon\"></i>\n                                    <FormGroup>\n                                        <Input id=\"searchBar\" type=\"text\" className=\"searchBar\" name=\"search\" style={{height: \"50px\", width: \"110%\", paddingLeft:\"50px\"}} placeholder=\"Search..\" onChange={this.handleInputChange}/>\n                                    </FormGroup>\n                                </Col>\n                                <Col sm={6} md={2}>\n                                    <FormGroup>\n                                        <Button type=\"submit\" className=\"searchButton\" style={{backgroundColor:\"#0A304E\"}}><b><center>Search</center></b></Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n                <div className=\"col-12\" style={{marginTop:\"22px\"}}>\n                    <div className=\"row\">\n                        {blog}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/MyBlogsComponent.js",["63","64","65","66","67","68","69","70","71","72"],"import Home from './HomeComponent';\nimport React, {Component} from 'react';\nimport {Button, Form, FormGroup, Input, Col, Row, Breadcrumb, BreadcrumbItem, ListGroup, ListGroupItem} from 'reactstrap';\nimport { Link} from 'react-router-dom';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nvar config = require('../config');\n\nclass MyBlogs extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\tblogs:[{\n\t\t\t\tblogid: 0, \n\t\t\t\ttitle: 'titleA',\n\t\t\t\tcategory: 'Travel'\n\t\t\t\t}, \n\t\t\t\t{\n\t\t\t\tblogid: 1, \n\t\t\t\ttitle: 'titleB',\n\t\t\t\tcategory: 'Fashion'\n\t\t\t\t}, \n\t\t\t\t{\n\t\t\t\tblogid: 2, \n\t\t\t\ttitle: 'titleC',\n\t\t\t\tcategory: 'Fashion'\n\t\t\t\t}]\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t//add check authenticated if-statement\n\t\t//fetch(config.serverUrl+this.props.path, {\n\t\tfetch(config.serverUrl+'/myBlogs/:this.props.username', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tif(data[0].title != null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tblogs: data\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\tconst blog = this.state.blogs.map((blog) => {\n\t\t\treturn(\n\t\t\t\t<ListGroupItem>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t\t<p className=\"m-0\">{blog.category}</p>\n\t\t\t\t\t\t\t<p className=\"m-0\"><Link to={`/blogviewer/${blog.blogid}`}>{blog.title}</Link></p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t<Link to={`/blogEditor/${blog.blogid}`} className=\"btn\" \n\t\t\t\t\t\t\t\tstyle={{background:\"rgba(10,48,78,0.42)\", fontFamily:\"Arial Black\",border:\"none\", borderRadius: \"50%\"}}>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-pencil\"></i>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ListGroupItem>\n\t\t\t);\n\t\t});\n\t\t\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Breadcrumb>\n\t\t\t\t\t\t<BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n\t\t\t\t\t\t<BreadcrumbItem active>My Blogs</BreadcrumbItem>\n\t\t\t\t\t</Breadcrumb>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row bloglist-row-content align-items-center\">\n\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t{blog}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row row-content\">\n\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<Button><Link to='/blogEditor' style={{color: '#fff'}}>Create a new blog</Link></Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default MyBlogs;","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/FavoriteComponent.js",["73","74","75","76","77"],"import React, {Component} from 'react';\nimport {Button, Form, FormGroup, Input, Col, Row, Breadcrumb, BreadcrumbItem, ListGroup, ListGroupItem} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nvar config = require('../config');\n\nclass Favorite extends Component {\n\tconstructor(props) {\n\t\t//username(''), authenticated(bool)\n\t\t//this blogs state is just for temp use only, wait for real data from backend\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tblogs:[{\n\t\t\t\tblogid: 2, \n\t\t\t\tauthor: 'personA',\n\t\t\t\ttitle: 'titleA',\n\t\t\t\tcontent: 'contentA',\n\t\t\t\tlike: true\n\t\t\t\t}, \n\t\t\t\t{\n\t\t\t\tblogid: 5, \n\t\t\t\tauthor: 'personB',\n\t\t\t\ttitle: 'titleB',\n\t\t\t\tcontent: 'contentB',\n\t\t\t\tlike: true\n\t\t\t\t}, \n\t\t\t\t{\n\t\t\t\tblogid: 9, \n\t\t\t\tauthor: 'personC',\n\t\t\t\ttitle: 'titleC',\n\t\t\t\tcontent: 'contentC',\n\t\t\t\tlike: true\n\t\t\t\t}]\n\t\t}\n\t\tthis.handleBan = this.handleBan.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n\t\t//add check authenticated if-statement\n\t\t//fetch(config.serverUrl+this.props.path, {\n\t\tfetch(config.serverUrl+'/favorite/:this.props.username', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tif(data[0].title != null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tblogs: data\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\thandleBan(blogid, event){\n\t\tevent.preventDefault();\n\t\tlet databody = {\n\t\t\t\"ban\": blogid,\n\t\t\t\"username\": this.props.username\n\t\t}\n\t\tfetch(config.serverUrl+'/favorite/:this.props.username', {\n\t\t\tmethod: 'DELETE',\n\t\t\tbody: JSON.stringify(databody),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tif(data.success){\n\t\t\t\talert(\"The blog is successfully delected from your favorite list.\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\talert(\"Deletion failed, try again.\");\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\tconst blog = this.state.blogs.map((blog) => {\n\t\t\treturn(\n\t\t\t\t<ListGroupItem>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t\t<p className=\"m-0\">{blog.author}</p>\n\t\t\t\t\t\t\t<p className=\"m-0\"><Link to={`/blogviewer/${blog.blogid}`}>{blog.title}</Link></p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col\" onSubmit={(event) => this.handleBan(blog.blogid, event)}>\n\t\t\t\t\t\t\t<Button type=\"submit\" value=\"submit\" style={{background:\"rgba(10,48,78,0.41)\", fontFamily:\"Arial Black\",border:\"none\", borderRadius: \"50%\"}}>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-ban\"></i>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ListGroupItem>\n\t\t\t);\n\t\t});\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Breadcrumb>\n\t\t\t\t\t\t<BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n\t\t\t\t\t\t<BreadcrumbItem active>Fav List</BreadcrumbItem>\n\t\t\t\t\t</Breadcrumb>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row list-row-content align-items-center\">\n\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t{blog}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Favorite;","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/FooterComponent.js",["78","79"],"﻿import React, { Component } from 'react';\n\nclass Footer extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"footer\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">             \n                        <div className=\"col-4 col-sm-2\">\n                            <h5 className=\"offset-4\">Contact</h5>\n                            <p className=\"m-0\">pxh257@case.edu</p>\n                            <p className=\"m-0\">txd172@case.edu</p>\n                            <p className=\"m-0\">qxl216@case.edu</p>\n                            <p className=\"m-0\">sxl1350@case.edu</p>\n                        </div>\n                        <div className=\"col col-sm\">\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center\">             \n                        <div className=\"col-auto\">\n                            <p className=\"m-0\">© Copyright 2021 CSDS393 Group 3</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Footer;","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/BlogEditorComponent.js",["80","81","82","83","84","85","86","87","88","89","90"],"import React, {Component} from 'react';\nimport {Button, Form, FormGroup, FormFeedback, Input, Col, Row, ListGroup, ListGroupItem} from 'reactstrap';\nimport { Link} from 'react-router-dom';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nvar config = require('../config');\n\nclass BlogEditor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tblogid: '',\n\t\t\tblogtitle:'',\n\t\t\tblogcategory:'NA',\n\t\t\tblogcontent:'',\n\t\t\tblogcomments:[{\n\t\t\t\tid: 0, \n\t\t\t\tcommentname: 'userA',\n\t\t\t\tdescription: 'commentA'\n\t\t\t\t}, \n\t\t\t\t{\n\t\t\t\tid: 1, \n\t\t\t\tcommentname: 'userB',\n\t\t\t\tdescription: 'commentB'\n\t\t\t\t}, \n\t\t\t\t{\n\t\t\t\tid: 2, \n\t\t\t\tcommentname: 'userB',\n\t\t\t\tdescription: 'commentC'\n\t\t\t\t}],\n\t\t\tfailedBlogDelete:false,\n\t\t\tfailedCommentDelete:false,\n\t\t\ttouched: {\n\t\t\t\tblogtitle: false,\n\t\t\t\tblogcontent: false\n\t\t\t}\n\t\t}\n\t\tthis.handleDelete = this.handleDelete.bind(this);\n\t\tthis.handleComment = this.handleComment.bind(this);\n\t\tthis.handleSave = this.handleSave.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.location.pathname == \"/blogEditor\"){\n\t\t\t//alert(\"this is an empty Editor for creating new blog\");\n\t\t\tthis.setState({\n\t\t\t\tblogcomments: []\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tfetch(config.serverUrl+this.props.location.pathname, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tblogit: data.blog_id,\n\t\t\t\t\tblogtitle: data.title,\n\t\t\t\t\tblogcategory: data.category,\n\t\t\t\t\tblogcontent: data.blog_content,\n\t\t\t\t\tblogcomments: data.comments\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\thandleInputChange(event) {\n\t\tconst target = event.target;\n\t\tconst value = target.value;\n\t\tconst name = target.name;\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\thandleDelete(e) {\n\t\te.preventDefault();\n\t\t//new=>MyBlogs; posted=>fetch delete\n\t\tif(this.props.location.pathname == '/BlogEditor') {\n\t\t\t//redirect to /myBlogs\n\t\t\t//<Redirect to=\"/home\" />\n\t\t}\n\t\telse {\n\t\t\tfetch(config.serverUrl+this.props.location.pathname, {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => console.log(data))\n\t\t}\n\t}\n\n\thandleSave(event) {\n\t\tevent.preventDefault();\n\t\t//then fetch either post or put\n\t\tif(this.props.location.pathname == '/blogEditor'){//fetch post\n\t\t\tlet databody = {\n\t\t\t\t\"title\": this.state.blogtitle,\n\t\t\t\t\"category\": this.state.blogcategory,\n\t\t\t\t\"content\": this.state.blogcontent,\n\t\t\t\t\"comments\": this.state.blogcomments\n\t\t\t}\n\t\t\tfetch(config.serverUrl+this.props.location.pathname, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(databody),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => console.log(data))\n\t\t}\n\t\telse{//fetch put\n\t\t\tlet databody = {\n\t\t\t\t\"title\": this.state.blogtitle,\n\t\t\t\t\"category\": this.state.blogcategory,\n\t\t\t\t\"content\": this.state.blogcontent,\n\t\t\t\t\"comments\": this.state.blogcomments\n\t\t\t}\n\t\t\tfetch(config.serverUrl+this.props.location.pathname, {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\tbody: JSON.stringify(databody),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.success){\n\t\t\t\t\talert(\"Successfully update the blog\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\talert(JSON.stringify(data.msg));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\thandleComment(comment, event) {\n\t\tevent.preventDefault();\n\t\tif(this.props.location.pathname == '/BlogEditor') {\n\t\t\t//no delete buttons\n\t\t}\n\t\telse {\n\t\t\t//tell backend which comment to delete\n\t\t\tlet databody = {\n\t\t\t\t\"blog_id\": this.state.blogid,\n\t\t\t\t\"tobeDelete\": true,\n\t\t\t\t\"comment_content\": comment\n\t\t\t}\n\t\t\tfetch(config.serverUrl+this.props.location.pathname, {//fetch put\n\t\t\t\tmethod: 'PUT',\n\t\t\t\tbody: JSON.stringify(databody),\n\t\t\t\theader: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.success) alert(\"Successfully deleted that comment\");\n                else\n                    alert(JSON.stringify(data.msg));\n\t\t\t})\n\t\t}\n\t}\n\n\thandleBlur = (field) => (evt) => {\n\t\tthis.setState({\n\t\t\ttouched: { ...this.state.touched, [field]: true }\n\t\t});\n\t}\n\n\tvalidate(blogtitle, blogcontent) {\n\t\tconst errors = {\n\t\t\tblogtitle: '',\n            blogcontent: ''\n\t\t};\n\n\t\tif(this.state.touched.blogtitle && blogtitle.length == 0)\n            errors.blogtitle = \"Blog title should not be empty\";\n        else if(this.state.touched.blogtitle && blogtitle.length > 50)\n            errors.blogtitle = \"Blog title should be <= 50 characters\";\n\n\t\tif(this.state.touched.blogcontent && blogcontent.length == 0)\n            errors.blogcontent = \"Blog content should not be empty\";\n\n\t\treturn errors;\n\t}\n\n\trenderComment(comments) {\n\t\tif(this.state.blogcomments == '') {\n\t\t\treturn(\n\t\t\t\t<p style={{color: '#989898'}} className=\"mt-4\">No Comments</p>\n\t\t\t\t\n\t\t\t);\n\t\t}\n\t\telse{\n\t\t//<Form onSubmit={(event) => this.handleComment(event)}>\n\t\t\tconst comment = comments.map((comment) => {\n\t\t\t\treturn(\n\t\t\t\t\t<ListGroupItem>\n\t\t\t\t\t\t<Form onSubmit={(event) => this.handleComment(comment, event)}>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t\t\t\t<p className=\"m-0\">{comment.commentname}</p>\n\t\t\t\t\t\t\t\t\t<p className=\"m-0\">{this.props.location.pathname}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-auto\">\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" value=\"submit\" color=\"danger\">Delete</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</ListGroupItem>\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn comment\n\t\t}\n\t}\n\n\trender() {\n\t\tconst errors = this.validate(this.state.blogtitle, this.state.blogcontent);\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row row-content\">\n\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t<Form onSubmit={this.handleSave}>\n\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Input type=\"text\" id=\"blogtitle\" name=\"blogtitle\" \n\t\t\t\t\t\t\t\t\t\tplaceholder=\"<blog_title>\" value={this.state.blogtitle}\n\t\t\t\t\t\t\t\t\t\tvalid={errors.blogtitle === ''} \n\t\t\t\t\t\t\t\t\t\tinvalid={errors.blogtitle !== ''} \n\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange} \n\t\t\t\t\t\t\t\t\t\tonBlur={this.handleBlur('blogtitle')} />\n\t\t\t\t\t\t\t\t\t<FormFeedback>{errors.blogtitle}</FormFeedback>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t<Col sm={12} md={2}>\n\t\t\t\t\t\t\t\t\t<select  name=\"category\" className=\"select-list\" onChange={this.handleInputChange}>\n\t\t\t\t\t\t\t\t\t\t<option value=\"NA\" disabled=\"disabled\">Category</option>\n                                        <option value =\"travel\">Travel</option>\n\t\t\t\t\t\t\t\t\t\t<option value =\"beauty\">Beauty</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Input type=\"textarea\" id=\"blogcontent\" name=\"blogcontent\" \n\t\t\t\t\t\t\t\t\t\tplaceholder=\"<blog_title>\" value={this.state.blogcontent}\n\t\t\t\t\t\t\t\t\t\trows=\"12\" valid={errors.blogcontent === ''} \n\t\t\t\t\t\t\t\t\t\tinvalid={errors.blogcontent !== ''} \n\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange} \n\t\t\t\t\t\t\t\t\t\tonBlur={this.handleBlur('blogcontent')} />\n\t\t\t\t\t\t\t\t\t<FormFeedback>{errors.blogcontent}</FormFeedback>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t<Col xs=\"5\"></Col>\n\t\t\t\t\t\t\t\t<Col xs=\"2\" sm=\"3\" md=\"4\">\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" value=\"submit\" color=\"primary\">Save</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<Form  onSubmit={(event) => this.handleDelete(event)}>\n\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t<Col xs=\"5\"></Col>\n\t\t\t\t\t\t\t\t<Col xs=\"2\" sm=\"3\" md=\"4\"></Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Link to={`/myBlogs/${this.props.username}`} className=\"btn btn-secondary\">Cancel</Link>\n\t\t\t\t\t\t\t\t\t<Link to={`/myBlogs/${this.props.username}`}>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" value=\"submit\" color=\"danger\">Delete</Button>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row comment-row-content\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h4>Comments</h4>\n\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t{this.renderComment(this.state.blogcomments)}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BlogEditor;","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/components/BlogViewerComponent.js",["91","92"],"import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, FormFeedback, Modal, ModalHeader, ModalBody, Row, Col, Label, Input} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nvar config = require('../config');\n\nclass BlogViewer extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            title:'',\n            author:'',\n            blog_content:'',\n            comments:[],\n            fav_list:[],\n            newComment:'',\n            isModalOpen: false,\n            touched: {\n                newComment: false\n            }\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleFav = this.handleFav.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(config.serverUrl+this.props.path, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            if(data.error_message) alert(data.error_message);\n            else{\n                this.setState({\n                    id: data.pk,\n                    title: data.title,\n                    author: data.username,\n                    blog_content: data.content\n                });\n                if(this.props.authenticated){\n                    fetch(config.serverUrl+\"/account/properties/\", {\n                        method:\"GET\",\n                        headers:{\n                            'Content-Type': 'application/json',\n                            'AUTHORIZATION': \"JWT \"+this.props.authenticated\n                        }\n                    })\n                    .then(res2 => res2.json())\n                    .then(data2 => {\n                            if(data2.error_message) alert(data2.error_message);\n                            else{\n                                this.setState({\n                                    fav_list: data2.fav_list\n                                });\n                                fetch(config.serverUrl+\"/comment/list?search\"+this.state.blog_id, {\n                                    method:\"GET\",\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    }\n                                })\n                                .then(res3 => res3.json())\n                                .then(data3 => {\n                                    if(data3.error_message) alert(data3.error_message);\n                                    else{\n                                        this.setState({\n                                            comments: data3\n                                        });\n                                    }\n                                })\n                            }\n                        }\n                    )\n                }\n            }\n        })\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    }\n\n    handleInputChange(event){\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true },\n        });\n    }\n\n    handleFav(event){\n        event.preventDefault();\n        if(this.props.authenticated){\n            var newFavList = this.state.fav_list;\n            var found = false;\n            for(var i = 0;i < newFavList.length;i++){\n                if(newFavList[i] == this.state.blog_id){\n                    found = true;\n                    for(;i < newFavList.length-1;i++){\n                        newFavList[i] = newFavList[i+1];\n                    }\n                }\n            }\n            if(found) alert(\"This blog has already been added to your favorite list!\");\n            else{\n                newFavList.push(this.state.blog_id);\n                let databody = {\n                    \"fav_list\": newFavList\n                }\n                fetch(config.serverUrl+\"/accout/properties/update\", {\n                    method: 'PUT',\n                    body: JSON.stringify(databody),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'AUTHORIZATION': \"JWT \"+this.props.authenticated\n                    }\n                })\n                .then(res => res.json())\n                .then(data => {\n                    alert(\"This blog has been added to your Fav List!\");\n                })\n            }\n        }\n        else{\n            alert(\"Please Login first!\");\n        }\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        if(this.props.authenticated){\n            let databody = {\n                \"comment_content\": this.state.newComment,\n                \"username\": this.props.username\n            }\n            fetch(config.serverUrl+\"/comment/create\", {\n                method: 'POST',\n                body: JSON.stringify(databody),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'AUTHORIZATION': \"JWT \"+this.props.authenticated\n                },\n            })\n            .then(res => res.json())\n            .then(data => {\n                alert(\"Successfully comment on this blog!\");\n                this.toggleModal();\n            })\n        }\n        else{\n            alert(\"Please Sign up or Login first!\");\n        }\n    }\n\n    validate(newComment) {\n\n        const errors = {\n            newComment:''\n        };\n\n        if (this.state.touched.newComment && newComment.length < 1)\n            errors.newComment = 'Comment is required';\n\n        return errors;\n    }\n\n    render(){\n        const errors = this.validate(this.state.newComment);\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to={{ pathname: '/home' , state: { search: this.props.location.state.search, category: this.props.location.state.category} }}>Search Results</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{this.state.title}</BreadcrumbItem>\n                    </Breadcrumb>                    \n                </div>\n                <h1 style={{textAlign:\"center\"}}>{this.state.title}</h1>\n                <h2 style={{textAlign:\"center\"}}>BY {this.state.author}</h2>\n                <div className=\"row\" style={{borderStyle:\"solid\", borderColor: \"#D7D7D7\", borderWidth:\"1px\",borderRadius:\"10px\", padding:\"20px\"}}>\n                    <div className=\"col-12\">\n                        <p>{this.state.blog_content}</p>\n                    </div>\n                    <br />\n                    <div className=\"col-9 col-md-3 offset-md-8\">\n                        <Button id=\"post\" disabled={!this.props.authenticated} onClick={this.toggleModal} style={{background:\"rgba(10,48,78,0.41)\", width:\"100%\", fontFamily:\"Arial Black\", color:\"white\", border:\"none\"}}>\n                            <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Post comment\n                        </Button>\n                    </div>\n                    <div className=\"col-3 col-md-1\">\n                        <Form onSubmit={this.handleFav} class=\"form-style\">\n                            <Button type=\"submit\" value=\"submit\" style={{background:\"rgba(10,48,78,0.41)\", fontFamily:\"Arial Black\",border:\"none\", borderRadius: \"50%\"}}>\n                                <i class=\"fa fa-heart\" aria-hidden=\"true\"></i>\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n                <div className=\"row\" style={{marginTop: \"20px\"}}>\n                    <div className=\"col-12\">\n                        <hr className=\"seperation\" />\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <p style={{fontSize:\"16px\", fontFamily:\"Arial Black\"}}>Comments</p>\n                    </div>\n                </div>\n                {\n                    this.state.comments.map((comment) => {\n                        return (\n                            <div className=\"row\" style={{marginBottom:\"30px\", paddingLeft:\"20px\"}}>\n                                <div className=\"col-12\" style={{marginTop:\"20px\"}}>\n                                    <p><strong>Author: </strong> {comment.username}</p>\n                                </div>\n                                <div className=\"col-12\">\n                                    <p><strong>Comment: </strong> {comment.comment_content}</p>\n                                </div>\n                                <div className=\"col-12\" style={{marginTop:\"-20px\"}}>\n                                    <hr style={{border:\"1px dashed #D7D7D7\"}} />\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Post Your Comment</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit} class=\"form-style\">\n                            <Row>\n                                <Col xs={12}>\n                                    <FormGroup className=\"form-style-form-group\">\n                                        <Label htmlFor=\"newComment\" className=\"form-style-label\">Comment (Required)</Label>\n                                        <Input type=\"textarea\" id=\"newComment\" name=\"newComment\" rows=\"5\" value={this.state.newComment} onChange={this.handleInputChange} valid={errors.newComment === ''} invalid={errors.newComment !== ''} onBlur={this.handleBlur('newComment')}/>\n                                        <FormFeedback>{errors.newComment}</FormFeedback>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm={12} md={{size:6, offset:3}}>\n                                    <FormGroup>\n                                        <Button disabled={ this.state.newComment === '' || errors.newComment != ''} type=\"submit\" value=\"submit\" style={{background:\"#0A304E\", width:\"100%\", fontFamily:\"Arial Black\"}}>Submit</Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default BlogViewer;","/Users/gilgamesh/Desktop/code/393/sites/frontend/src/config.js",[],"/Users/gilgamesh/Desktop/code/393/sites/frontend/src/shared/baseUrl.js",[],{"ruleId":"93","severity":1,"message":"94","line":3,"column":9,"nodeType":"95","messageId":"96","endLine":3,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":48,"column":29,"nodeType":"99","messageId":"100","endLine":48,"endColumn":31},{"ruleId":"93","severity":1,"message":"101","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":12},{"ruleId":"93","severity":1,"message":"102","line":3,"column":17,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"103","line":3,"column":23,"nodeType":"95","messageId":"96","endLine":3,"endColumn":32},{"ruleId":"93","severity":1,"message":"104","line":3,"column":34,"nodeType":"95","messageId":"96","endLine":3,"endColumn":39},{"ruleId":"93","severity":1,"message":"105","line":3,"column":41,"nodeType":"95","messageId":"96","endLine":3,"endColumn":44},{"ruleId":"93","severity":1,"message":"106","line":3,"column":46,"nodeType":"95","messageId":"96","endLine":3,"endColumn":49},{"ruleId":"93","severity":1,"message":"107","line":5,"column":9,"nodeType":"95","messageId":"96","endLine":5,"endColumn":15},{"ruleId":"93","severity":1,"message":"108","line":5,"column":17,"nodeType":"95","messageId":"96","endLine":5,"endColumn":22},{"ruleId":"93","severity":1,"message":"109","line":5,"column":24,"nodeType":"95","messageId":"96","endLine":5,"endColumn":32},{"ruleId":"93","severity":1,"message":"110","line":5,"column":34,"nodeType":"95","messageId":"96","endLine":5,"endColumn":44},{"ruleId":"93","severity":1,"message":"102","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"103","line":2,"column":23,"nodeType":"95","messageId":"96","endLine":2,"endColumn":32},{"ruleId":"93","severity":1,"message":"104","line":2,"column":34,"nodeType":"95","messageId":"96","endLine":2,"endColumn":39},{"ruleId":"93","severity":1,"message":"105","line":2,"column":41,"nodeType":"95","messageId":"96","endLine":2,"endColumn":44},{"ruleId":"93","severity":1,"message":"106","line":2,"column":46,"nodeType":"95","messageId":"96","endLine":2,"endColumn":49},{"ruleId":"111","severity":1,"message":"112","line":1,"column":1,"nodeType":"113","messageId":"100","fix":"114"},{"ruleId":"115","severity":1,"message":"116","line":4,"column":2,"nodeType":"117","messageId":"118","endLine":6,"endColumn":3},{"ruleId":"93","severity":1,"message":"107","line":4,"column":9,"nodeType":"95","messageId":"96","endLine":4,"endColumn":15},{"ruleId":"93","severity":1,"message":"108","line":4,"column":17,"nodeType":"95","messageId":"96","endLine":4,"endColumn":22},{"ruleId":"93","severity":1,"message":"109","line":4,"column":24,"nodeType":"95","messageId":"96","endLine":4,"endColumn":32},{"ruleId":"93","severity":1,"message":"110","line":4,"column":34,"nodeType":"95","messageId":"96","endLine":4,"endColumn":44},{"ruleId":"97","severity":1,"message":"98","line":45,"column":35,"nodeType":"99","messageId":"100","endLine":45,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":84,"column":35,"nodeType":"99","messageId":"100","endLine":84,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":103,"column":35,"nodeType":"99","messageId":"100","endLine":103,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":148,"column":35,"nodeType":"99","messageId":"100","endLine":148,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":186,"column":55,"nodeType":"99","messageId":"100","endLine":186,"endColumn":57},{"ruleId":"97","severity":1,"message":"98","line":191,"column":59,"nodeType":"99","messageId":"100","endLine":191,"endColumn":61},{"ruleId":"97","severity":1,"message":"98","line":198,"column":30,"nodeType":"99","messageId":"100","endLine":198,"endColumn":32},{"ruleId":"97","severity":1,"message":"98","line":112,"column":34,"nodeType":"99","messageId":"100","endLine":112,"endColumn":36},{"ruleId":"97","severity":1,"message":"119","line":254,"column":110,"nodeType":"99","messageId":"100","endLine":254,"endColumn":112},"no-unused-vars","'baseUrl' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Home' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"120","text":"121"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Expected '!==' and instead saw '!='.",[-1,0],""]
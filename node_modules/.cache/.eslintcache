[{"/Users/gilgamesh/Desktop/code/393/sites/src/index.js":"1","/Users/gilgamesh/Desktop/code/393/sites/src/App.js":"2","/Users/gilgamesh/Desktop/code/393/sites/src/reportWebVitals.js":"3","/Users/gilgamesh/Desktop/code/393/sites/src/components/MainComponent.js":"4","/Users/gilgamesh/Desktop/code/393/sites/src/components/BlogViewerComponent.js":"5","/Users/gilgamesh/Desktop/code/393/sites/src/components/HeaderComponent.js":"6","/Users/gilgamesh/Desktop/code/393/sites/src/components/HomeComponent.js":"7","/Users/gilgamesh/Desktop/code/393/sites/src/config.js":"8","/Users/gilgamesh/Desktop/code/393/sites/src/shared/baseUrl.js":"9","/Users/gilgamesh/Desktop/code/393/sites/src/components/FavoriteComponent.js":"10","/Users/gilgamesh/Desktop/code/393/sites/src/components/FooterComponent.js":"11","/Users/gilgamesh/Desktop/code/393/sites/src/components/MyBlogsComponent.js":"12","/Users/gilgamesh/Desktop/code/393/sites/src/components/BlogEditorComponent.js":"13"},{"size":639,"mtime":1618986521000,"results":"14","hashOfConfig":"15"},{"size":298,"mtime":1618986521000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1618986521000,"results":"17","hashOfConfig":"15"},{"size":2547,"mtime":1619518206669,"results":"18","hashOfConfig":"15"},{"size":8842,"mtime":1618986521000,"results":"19","hashOfConfig":"15"},{"size":9522,"mtime":1619518206669,"results":"20","hashOfConfig":"15"},{"size":5944,"mtime":1619518206669,"results":"21","hashOfConfig":"15"},{"size":61,"mtime":1618986521000,"results":"22","hashOfConfig":"15"},{"size":47,"mtime":1618986521000,"results":"23","hashOfConfig":"15"},{"size":2893,"mtime":1619518206668,"results":"24","hashOfConfig":"15"},{"size":1172,"mtime":1619518206668,"results":"25","hashOfConfig":"15"},{"size":2398,"mtime":1619518206670,"results":"26","hashOfConfig":"15"},{"size":8023,"mtime":1619518206668,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rjcwh1",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gilgamesh/Desktop/code/393/sites/src/index.js",[],"/Users/gilgamesh/Desktop/code/393/sites/src/App.js",[],"/Users/gilgamesh/Desktop/code/393/sites/src/reportWebVitals.js",[],"/Users/gilgamesh/Desktop/code/393/sites/src/components/MainComponent.js",["55"],"/Users/gilgamesh/Desktop/code/393/sites/src/components/BlogViewerComponent.js",["56"],"import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, FormFeedback, Modal, ModalHeader, ModalBody, Row, Col, Label, Input} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nvar config = require('../config');\n\nclass BlogViewer extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            id:'',\n            title:'',\n            author:'',\n            blog_content:'',\n            comments:[],\n            newComment:'',\n            isModalOpen: false,\n            touched: {\n                newComment: false\n            }\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleFav = this.handleFav.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(config.serverUrl+this.props.path, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                id: data.blog_id,\n                title: data.title,\n                author: data.author,\n                blog_content: data.blog_content,\n                comments: data.comments\n            })\n        })\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    }\n\n    handleInputChange(event){\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true },\n        });\n    }\n\n    handleFav(event){\n        event.preventDefault();\n        if(this.props.authenticated){\n            let databody = {\n                \"fav\": this.state.blog_id,\n                \"username\": this.props.username\n            }\n            fetch(config.serverUrl+this.props.path, {\n                method: 'PUT',\n                body: JSON.stringify(databody),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => res.json())\n            .then(data => {\n                if(data.success) alert(\"This blog has been added to your Fav List!\");\n                else\n                    alert(JSON.stringify(data.msg));\n            })\n        }\n        else{\n            alert(\"Please Sign up or Login first!\");\n        }\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        if(this.props.authenticated){\n            let databody = {\n                \"comment_content\": this.state.newComment,\n                \"username\": this.props.username\n            }\n            fetch(config.serverUrl+this.props.path, {\n                method: 'PUT',\n                body: JSON.stringify(databody),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            })\n            .then(res => res.json())\n            .then(data => {\n                if(data.success){\n                    alert(\"Successfully comment on this blog!\");\n                    this.toggleModal();\n                }\n                else\n                    alert(JSON.stringify(data.msg));\n            })\n        }\n        else{\n            alert(\"Please Sign up or Login first!\");\n        }\n    }\n\n    validate(newComment) {\n\n        const errors = {\n            newComment:''\n        };\n\n        if (this.state.touched.newComment && newComment.length < 1)\n            errors.newComment = 'Comment is required';\n\n        return errors;\n    }\n\n    render(){\n        const errors = this.validate(this.state.newComment);\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to={{ pathname: '/home' , state: { search: this.props.location.state.search, category: this.props.location.state.category} }}>Search Results</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{this.state.title}</BreadcrumbItem>\n                    </Breadcrumb>                    \n                </div>\n                <h1 style={{textAlign:\"center\"}}>{this.state.title}</h1>\n                <h2 style={{textAlign:\"center\"}}>BY {this.state.author}</h2>\n                <div className=\"row\" style={{borderStyle:\"solid\", borderColor: \"#D7D7D7\", borderWidth:\"1px\",borderRadius:\"10px\", padding:\"20px\"}}>\n                    <div className=\"col-12\">\n                        <p>{this.state.blog_content}</p>\n                    </div>\n                    <br />\n                    <div className=\"col-9 col-md-3 offset-md-8\">\n                        <Button id=\"post\" disabled={!this.props.authenticated} onClick={this.toggleModal} style={{background:\"rgba(10,48,78,0.41)\", width:\"100%\", fontFamily:\"Arial Black\", color:\"white\", border:\"none\"}}>\n                            <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Post comment\n                        </Button>\n                    </div>\n                    <div className=\"col-3 col-md-1\">\n                        <Form onSubmit={this.handleFav} class=\"form-style\">\n                            <Button type=\"submit\" value=\"submit\" style={{background:\"rgba(10,48,78,0.41)\", fontFamily:\"Arial Black\",border:\"none\", borderRadius: \"50%\"}}>\n                                <i class=\"fa fa-heart\" aria-hidden=\"true\"></i>\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n                <div className=\"row\" style={{marginTop: \"20px\"}}>\n                    <div className=\"col-12\">\n                        <hr className=\"seperation\" />\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <p style={{fontSize:\"16px\", fontFamily:\"Arial Black\"}}>Comments</p>\n                    </div>\n                </div>\n                {\n                    this.state.comments.map((comment) => {\n                        return (\n                            <div className=\"row\" style={{marginBottom:\"30px\", paddingLeft:\"20px\"}}>\n                                <div className=\"col-12\" style={{marginTop:\"20px\"}}>\n                                    <p><strong>Author: </strong> {comment.username}</p>\n                                </div>\n                                <div className=\"col-12\">\n                                    <p><strong>Comment: </strong> {comment.comment_content}</p>\n                                </div>\n                                <div className=\"col-12\" style={{marginTop:\"-20px\"}}>\n                                    <hr style={{border:\"1px dashed #D7D7D7\"}} />\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Post Your Comment</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit} class=\"form-style\">\n                            <Row>\n                                <Col xs={12}>\n                                    <FormGroup className=\"form-style-form-group\">\n                                        <Label htmlFor=\"newComment\" className=\"form-style-label\">Comment (Required)</Label>\n                                        <Input type=\"textarea\" id=\"newComment\" name=\"newComment\" rows=\"5\" value={this.state.newComment} onChange={this.handleInputChange} valid={errors.newComment === ''} invalid={errors.newComment !== ''} onBlur={this.handleBlur('newComment')}/>\n                                        <FormFeedback>{errors.newComment}</FormFeedback>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm={12} md={{size:6, offset:3}}>\n                                    <FormGroup>\n                                        <Button disabled={ this.state.newComment === '' || errors.newComment != ''} type=\"submit\" value=\"submit\" style={{background:\"#0A304E\", width:\"100%\", fontFamily:\"Arial Black\"}}>Submit</Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default BlogViewer;","/Users/gilgamesh/Desktop/code/393/sites/src/components/HeaderComponent.js",["57"],"/Users/gilgamesh/Desktop/code/393/sites/src/components/HomeComponent.js",["58"],"/Users/gilgamesh/Desktop/code/393/sites/src/config.js",[],"/Users/gilgamesh/Desktop/code/393/sites/src/shared/baseUrl.js",[],"/Users/gilgamesh/Desktop/code/393/sites/src/components/FavoriteComponent.js",["59","60","61","62","63"],"/Users/gilgamesh/Desktop/code/393/sites/src/components/FooterComponent.js",["64","65"],"/Users/gilgamesh/Desktop/code/393/sites/src/components/MyBlogsComponent.js",["66","67","68","69","70","71","72","73","74","75"],"/Users/gilgamesh/Desktop/code/393/sites/src/components/BlogEditorComponent.js",["76","77","78","79","80","81","82","83","84","85","86"],{"ruleId":"87","severity":1,"message":"88","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":208,"column":110,"nodeType":"93","messageId":"94","endLine":208,"endColumn":112},{"ruleId":"87","severity":1,"message":"95","line":3,"column":9,"nodeType":"89","messageId":"90","endLine":3,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":87,"column":58,"nodeType":"93","messageId":"94","endLine":87,"endColumn":60},{"ruleId":"87","severity":1,"message":"96","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":21},{"ruleId":"87","severity":1,"message":"97","line":2,"column":23,"nodeType":"89","messageId":"90","endLine":2,"endColumn":32},{"ruleId":"87","severity":1,"message":"98","line":2,"column":34,"nodeType":"89","messageId":"90","endLine":2,"endColumn":39},{"ruleId":"87","severity":1,"message":"99","line":2,"column":41,"nodeType":"89","messageId":"90","endLine":2,"endColumn":44},{"ruleId":"87","severity":1,"message":"100","line":2,"column":46,"nodeType":"89","messageId":"90","endLine":2,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":1,"column":1,"nodeType":"103","messageId":"94","fix":"104"},{"ruleId":"105","severity":1,"message":"106","line":4,"column":2,"nodeType":"107","messageId":"108","endLine":6,"endColumn":3},{"ruleId":"87","severity":1,"message":"109","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"96","line":3,"column":17,"nodeType":"89","messageId":"90","endLine":3,"endColumn":21},{"ruleId":"87","severity":1,"message":"97","line":3,"column":23,"nodeType":"89","messageId":"90","endLine":3,"endColumn":32},{"ruleId":"87","severity":1,"message":"98","line":3,"column":34,"nodeType":"89","messageId":"90","endLine":3,"endColumn":39},{"ruleId":"87","severity":1,"message":"99","line":3,"column":41,"nodeType":"89","messageId":"90","endLine":3,"endColumn":44},{"ruleId":"87","severity":1,"message":"100","line":3,"column":46,"nodeType":"89","messageId":"90","endLine":3,"endColumn":49},{"ruleId":"87","severity":1,"message":"110","line":5,"column":9,"nodeType":"89","messageId":"90","endLine":5,"endColumn":15},{"ruleId":"87","severity":1,"message":"111","line":5,"column":17,"nodeType":"89","messageId":"90","endLine":5,"endColumn":22},{"ruleId":"87","severity":1,"message":"112","line":5,"column":24,"nodeType":"89","messageId":"90","endLine":5,"endColumn":32},{"ruleId":"87","severity":1,"message":"113","line":5,"column":34,"nodeType":"89","messageId":"90","endLine":5,"endColumn":44},{"ruleId":"87","severity":1,"message":"110","line":4,"column":9,"nodeType":"89","messageId":"90","endLine":4,"endColumn":15},{"ruleId":"87","severity":1,"message":"111","line":4,"column":17,"nodeType":"89","messageId":"90","endLine":4,"endColumn":22},{"ruleId":"87","severity":1,"message":"112","line":4,"column":24,"nodeType":"89","messageId":"90","endLine":4,"endColumn":32},{"ruleId":"87","severity":1,"message":"113","line":4,"column":34,"nodeType":"89","messageId":"90","endLine":4,"endColumn":44},{"ruleId":"91","severity":1,"message":"114","line":45,"column":35,"nodeType":"93","messageId":"94","endLine":45,"endColumn":37},{"ruleId":"91","severity":1,"message":"114","line":84,"column":35,"nodeType":"93","messageId":"94","endLine":84,"endColumn":37},{"ruleId":"91","severity":1,"message":"114","line":103,"column":35,"nodeType":"93","messageId":"94","endLine":103,"endColumn":37},{"ruleId":"91","severity":1,"message":"114","line":148,"column":35,"nodeType":"93","messageId":"94","endLine":148,"endColumn":37},{"ruleId":"91","severity":1,"message":"114","line":186,"column":55,"nodeType":"93","messageId":"94","endLine":186,"endColumn":57},{"ruleId":"91","severity":1,"message":"114","line":191,"column":59,"nodeType":"93","messageId":"94","endLine":191,"endColumn":61},{"ruleId":"91","severity":1,"message":"114","line":198,"column":30,"nodeType":"93","messageId":"94","endLine":198,"endColumn":32},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'baseUrl' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"115","text":"116"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Home' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","Expected '===' and instead saw '=='.",[-1,0],""]